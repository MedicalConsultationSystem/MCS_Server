basePath: /
definitions:
  model.BaseDrug:
    properties:
      approval_number:
        type: string
      dose:
        type: number
      dose_unit:
        type: string
      drug_id:
        type: integer
      drug_name:
        type: string
      factory_name:
        type: string
      pack_unit:
        type: string
      pinyin_code:
        type: string
      price:
        type: number
      specification:
        type: string
      trade_name:
        type: string
    type: object
  model.BaseOrg:
    properties:
      org_id:
        type: integer
      org_name:
        type: string
    type: object
  request.AddDept:
    properties:
      dept_name:
        type: string
    type: object
  request.AddDoctor:
    properties:
      avatar_url:
        type: string
      dept_id:
        type: integer
      dept_name:
        type: string
      doctor_id:
        type: string
      doctor_name:
        type: string
      level_code:
        type: string
      level_name:
        type: string
      org_id:
        type: integer
      org_name:
        type: string
    type: object
  request.AddDrug:
    properties:
      approval_number:
        type: string
      dose:
        type: number
      dose_unit:
        type: string
      drug_name:
        type: string
      factory_name:
        type: string
      pack_unit:
        type: string
      pinyin_code:
        type: string
      price:
        type: number
      specification:
        type: string
      trade_name:
        type: string
    type: object
  request.AddOrg:
    properties:
      org_name:
        type: string
    type: object
  request.FindDoctorByName:
    properties:
      doctor_name:
        type: string
    type: object
  request.FindDrugByName:
    properties:
      drug_name:
        type: string
    type: object
  request.FindDrugByPinyin:
    properties:
      pinyin:
        type: string
    type: object
info:
  contact: {}
  description: MCS_Server API 接口文档
  title: Swagger MCS_Server API
  version: 0.0.1
paths:
  /dept/add:
    post:
      consumes:
      - application/json
      parameters:
      - description: 科室名称
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.AddDept'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"科室添加成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 增加一个科室
      tags:
      - 科室
  /dept/listAll:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"科室信息获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 获取所有科室
      tags:
      - 科室
  /doctor/add:
    post:
      consumes:
      - application/json
      parameters:
      - description: 医生id，医生姓名，机构id，机构名称，科室id，科室名称，医生头像链接，医生职称代码，医生职称
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.AddDoctor'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"医生注册成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 注册医生信息
      tags:
      - 医生
  /doctor/findByName:
    post:
      parameters:
      - description: 医生姓名
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.FindDoctorByName'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"医生信息获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 根据姓名模糊查询医生
      tags:
      - 医生
  /doctor/listAll:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"医生信息获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 获取所有医生信息
      tags:
      - 医生
  /drug/add:
    post:
      consumes:
      - application/json
      parameters:
      - description: 药物通用名称,商品名,拼音码,药品规格,包装单位,药品价格,剂量,剂量单位,产地,批准文号
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.AddDrug'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"药物添加成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 增加一种药物
      tags:
      - 药物
  /drug/deleteDrug:
    delete:
      parameters:
      - description: 数据库中药物结构体
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.BaseDrug'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"药物信息删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 根据传入的药物结构体删除数据库中对应药物信息
      tags:
      - 药物
  /drug/findByName:
    post:
      parameters:
      - description: 药物名称
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.FindDrugByName'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"药物信息获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 根据名称模糊查询药物
      tags:
      - 药物
  /drug/findByPinyin:
    post:
      parameters:
      - description: 药物拼音
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.FindDrugByPinyin'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"药物信息获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 根据拼音代码模糊查询药物
      tags:
      - 药物
  /drug/listAll:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"药物信息获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 获取所有药物信息
      tags:
      - 药物
  /organization/add:
    post:
      consumes:
      - application/json
      parameters:
      - description: 机构名称
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.AddOrg'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"机构添加成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 增加一个机构
      tags:
      - 机构
  /organization/deleteOrg:
    delete:
      parameters:
      - description: 数据库中机构结构体
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.BaseOrg'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"机构信息删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 根据传入的机构结构体删除数据库中对应机构信息
      tags:
      - 机构
  /organization/listAll:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"机构信息获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 获取所有机构
      tags:
      - 机构
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: x-token
    type: apiKey
swagger: "2.0"
